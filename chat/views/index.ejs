<!doctype html>
<html lang='en'>

<head>
  <meta charset='utf-8'>
  <meta name='viewport' content='width=device-width, initial-scale=1'>
  <title>chatsapp2</title>
  <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi' crossorigin='anonymous'>

  <style>
    * {
      margin: 0%;
      padding: 0%;
      box-sizing: border-box;
      font-family: gilroy;
    }

    html,
    body {
      height: 100%;
      width: 100%;
    }
    
    #main>.right {
      display: none;
    }

    .userImage {
      height: 3rem;
      width: 3rem;
      border-radius: 50%;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p,
    a {
      margin: 0;
    }

    .chat h4,
    .chat p {
      line-height: 1.2rem;
    }

    .msg {
      width: fit-content;
    }

    .conversationArea {
      height: 79vh;
      background-image: url('https://i.redd.it/o67iakxcon571.jpg');
      background-position: center;
      background-size: cover;
    }

    .right .top {
      height: 10.3vh;
      background-color: #202C33;
      border-bottom: 2px solid #000;
    }

    .right .bottom {
      margin-top: 14px;
      margin-left: 12px;
      height: 6vh;
      width: 73vw;
      align-items: center;
    }
    .right .btom{
      height: 10.7vh;
      background-color: #202C33;
      border-top: 2px solid #000;
    }
    .left{
      background-color: #111B21;
      
    }
    .left .top{
      color: darkseagreen;
      text-transform: capitalize;
      background-color: #202C33;
      border-bottom: 2px solid #000;
      border-right: 2px solid #000;
    }
    .chat{
      color: white;
      background-color: #111B21;
    }
    .chat{
      transition: all ease 0.3s;
    }
    .chat:hover{
      background-color: rgba(255, 255, 255, 0.456);
      cursor: pointer;
      color: #000;
      border: 1px solid #dadada;
    }
  </style>

</head>

<body>
  <div id="main" class="w-100 h-100 d-flex">

    <div class="left col-3 h-100">

      <div class="top mb-1">
        <div class="user d-flex gap-2 align-items-center p-2">
          <img class="userImage" src="<%= user.img %>" alt="">
          <h3> <%= user.username %> </h3>
        </div>
      </div>


      <div class="chats">


      </div>


    </div>
    <div class="right col-9 bg-dark">

      <div class="top text-light">
        <div class="currentChatUser p-2">
          <div class="user d-flex gap-2 align-items-center">
            <img id="currentChatUserImage" src="https://images.unsplash.com/photo-1682687220945-922198770e60?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDF8MHxlZGl0b3JpYWwtZmVlZHwxfHx8ZW58MHx8fHx8" class="userImage"></img>
            <h4 id="currentChatUserUsername">Username</h4>
          </div>
        </div>
      </div>
      <div class="conversationArea w-100 p-2">
        
      </div>
       <div class="btom">
      <div class="bottom d-flex">
        <input id="inp" type="text" class="form-control" placeholder="Enter message">
        <button onclick="sendMessage()" class="btn btn-success">send</button>
      </div>
       </div>
    </div>

  </div>
  <script src='https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js' integrity='sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3' crossorigin='anonymous'></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>

    var currentChatUserId = null;
    const currentUserId = "<%= user._id %>";
    const senderId = `<%= user._id %>`
    var socket = io();


    socket.emit('join-server', '<%= user.username %>')

    /*socket.on('sony', msg => {
      console.log(msg)
    })*/

     socket.on('newUserJoined', msg => {
      appendNewChat(msg.img, msg.username, msg.lastMessage, msg.id)
    })

     function appendNewChat(img, username, lastMessage, chatId) {

      if (!document.querySelector(`#shery_${chatId}`)) {
        const template = `<div id="shery_${chatId}" onclick="setCurrentChat('${img}','${username}','${chatId}')" class="chat d-flex p-2 gap-2">
          <div class="left">
            <img class="userImage " src="${img}" alt="">
            </div>
            <div class="right">
              <h4>${username}</h4>
              <p class="mt-2">${lastMessage}</p>
              </div>
        </div>`
        document.querySelector('.chats').innerHTML += template
      }
     
    }

     function sendMessage() {
      const msgValue = document.querySelector("#inp").value
      //ye retuen kardena agar message epmty string hai to. 
      if(!msgValue)
         return 
          const template = `<div class="msg outgoingMessage bg-light ms-auto text-success rounded-2 p-2 m-1">
          ${msgValue}
          </div>`

        document.querySelector('.conversationArea').innerHTML += template
        
        const msg ={
          msg: msgValue,
          receiver: currentChatUserId,
          sender: senderId,
        }

        console.log('Sending message to:', currentChatUserId);
        socket.emit("privateMessage", msg);
        document.querySelector("#inp").value = "";  // Clear input after sending
    }  

     function putOutgoingMessage(msgValue) {
      if (!msgValue)
        return
      const template = `<div class="msg outgoingMessage ms-auto bg-light rounded-2 p-2 m-1 style="width: fit-content;">
          ${msgValue}
        </div>`

      document.querySelector('.conversationArea').innerHTML += template
    }

     function putIncomingMessage(msg) {
      if (!msg)
        return
      const template = `<div class="msg incomingMessage bg-light rounded-2 p-2 m-1 style="width: fit-content;">
          ${msg}
        </div>`
      document.querySelector('.conversationArea').innerHTML += template
    }

     function setCurrentChat(img, username, userId) {
      document.querySelector('#currentChatUserImage').setAttribute('src', img)
      document.querySelector('#currentChatUserUsername').textContent = username
      document.querySelector("#main > .right").classList.add('d-block')
      currentChatUserId = userId

      socket.emit('getPrivateMessage', {
      receiver: userId,
      sender:senderId
      });

    } 

     socket.on('receivePrivateMessage', msg =>{
      if (msg.sender == currentChatUserId) 
           putIncomingMessage(msg.msg)
      });

     socket.on("getChatMessages", allMessages => {
      
      document.querySelector('.conversationArea').innerHTML = ""

    allMessages.forEach(message => {

        if (message.sender == senderId) {
          putOutgoingMessage(message.actualMessage)
        } else {
          putIncomingMessage(message.actualMessage)
        }

      });
    }) 

    </script>
</body>

</html>